🔹 What is JSON?

### ✅ Definition:

**JSON** is a lightweight format to store and exchange data. It's like a **JavaScript object** but in **string format**.

### 🔸 Example of JSON:

{
  "name": "Alice",
  "age": 25,
  "hobbies": ["reading", "coding"],
  "address": {
    "city": "Delhi",
    "zip": "110001"
  }
}

> In JavaScript, JSON is treated as a **string**, and you must **parse it** to use it like a normal object.


## 🔹 How to Use JSON in JavaScript

### ✅ Parse JSON String to Object:

const jsonString = '{"name":"Alice","age":25}';
const obj = JSON.parse(jsonString);

console.log(obj.name); // Alice

### ✅ Convert Object to JSON String:

const user = { name: "Bob", age: 30 };
const jsonString = JSON.stringify(user);

console.log(jsonString); // {"name":"Bob","age":30}


## 🔹 Fetching JSON Data (from APIs)

### ✅ Basic Syntax:

fetch('https://api.example.com/data')
  .then(response => response.json()) // convert response to JSON
  .then(data => {
    // use the data
    console.log(data);
  })
  .catch(error => console.log('Error:', error));


## 🔸 Practical Examples

### 🔸 Example 1: Fetch a user's info

fetch('https://jsonplaceholder.typicode.com/posts/1')
  .then(res => res.json())
  .then(user => console.log(user));

### 🔸 Example 2: Display a list of posts

fetch('https://jsonplaceholder.typicode.com/posts')
  .then(res => res.json())
  .then(posts => {
    posts.forEach(post => {
      console.log(post.title);
    });
  });


## 🔸 Example 3: Fetch and display data in a webpage

<ul id="users"></ul>

<script>
  fetch('https://jsonplaceholder.typicode.com/users')
    .then(res => res.json())
    .then(users => {
      const list = document.getElementById("users");
      users.forEach(user => {
        const li = document.createElement("li");
        li.textContent = `${user.name} (${user.email})`;
        list.appendChild(li);
      });
    });
</script>


## 🔸 Example 4: POST request (sending JSON data)

const newPost = {
  title: "My New Post",
  body: "This is the content.",
  userId: 1
};

fetch('https://jsonplaceholder.typicode.com/posts', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify(newPost)
})
  .then(res => res.json())
  .then(data => console.log("Created:", data));


## 🔸 Example 5: Handling Nested JSON

{
  "name": "Alice",
  "location": {
    "city": "Mumbai",
    "coordinates": {
      "lat": 19.07,
      "lng": 72.87
    }
  }
}

const json = '{"name":"Alice","location":{"city":"Mumbai","coordinates":{"lat":19.07,"lng":72.87}}}';
const obj = JSON.parse(json);

console.log(obj.location.city); // Mumbai
console.log(obj.location.coordinates.lat); // 19.07
```

---

## 🔸 Tips to Master JSON & Fetch

1. ✅ Practice reading JSON from real APIs (like TMDB, OMDB, JSONPlaceholder, etc.)
2. ✅ Use `JSON.stringify()` and `JSON.parse()` often.
3. ✅ Learn how to handle nested data.
4. ✅ Learn to loop through arrays and display items dynamically.

---

## 🔹 Challenge Exercises

Try doing these to practice:

1. 🔍 Fetch 10 movies from OMDB API and show title, year.
2. ⭐ Fetch 5 products from `https://fakestoreapi.com/products` and display them in cards.
3. 📝 Make a POST request to send a comment to `https://jsonplaceholder.typicode.com/comments`.
